@model Properties

@{ViewData["Title"] = "Edit";}

@await Component.InvokeAsync("Form", new {formType = "DivCardHead", thisModel = "Property"})

<section class="content">
    <div class="card">
        <form asp-action="Edit" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="card-body">
                <input type="hidden" asp-for="Id" />
                <div class="custom-control custom-switch custom-switch-off-danger custom-switch-on-success">
                    <input type="checkbox" class="custom-control-input" asp-for="IsDamaged" />
                    <label class="form-check-label"> @Html.DisplayNameFor(model => model.IsDamaged) </label>
                </div>
            </div>
            <!-- /.card-body -->
            <div class="card-footer">
                <div class="btn-group">
                    <input type="submit" value="Save" class="btn bg-gradient-primary" />
                    @await Component.InvokeAsync("Form", new { formType = "Button", className = "btn bg-gradient-secondary", action ="Index", functionName = "Back to List"})
                </div>
            </div>
        </form>
        <!-- /.card-footer-->
    </div>
</section>

@section Scripts {@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}}